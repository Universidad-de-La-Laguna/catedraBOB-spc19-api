openapi: 3.0.0
info:
  title: spc19-api
  description: This is an API for SPC19 project
  contact:
    email: bcuestav@ull.edu.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-oas3
# servers:
# - url: https://virtserver.swaggerhub.com/ESIT-ULL/spc19-api/1.0.0
# - url: http://virtserver.swaggerhub.com/ESIT-ULL/spc19-api/1.0.0
security:
- bearerAuth: []
paths:
  /insurers/insurance:
    post:
      operationId: addInsurancePolicy
      summary: register new insurance policy
      description: Add a new insurance policy to the system
      requestBody:
        description: Insurance item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceItem'
      responses:
        "201":
          description: insurance created
        "400":
          description: Invalid input, object invalid
        "401":
          description: Security token is missing or invalid
        "409":
          description: an existing insurance already exists
      x-swagger-router-controller: Admins
  /insurers/{insuranceId}/payment:
    post:
      summary: order payment for insurance policy
      description: Order the payment to customer for accomplishment of blockchain
        contract
      operationId: orderPayment
      parameters:
      - name: insuranceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/InsuranceId'
      requestBody:
        description: Order payment detail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentItem'
      responses:
        "200":
          description: payment processed
        "400":
          description: Invalid input, object invalid
        "401":
          description: Security token is missing or invalid
        "404":
          description: Item not found
      x-swagger-router-controller: Admins
  /customers/{customerId}/pcrRequests:
    get:
      summary: get all PCR Request of a customer
      description: Get state of all PCR Request of a customer
      operationId: getPcrRequests
      parameters:
      - name: customerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CustomerId'
      responses:
        "200":
          description: Array of all PCR Tests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PcrRequestItem'
                x-content-type: application/json
        "404":
          description: Item not found
      x-swagger-router-controller: Admins
    post:
      summary: new PCR test request to a customer
      description: Hotel create a new PCR Request to check-in os a customer
      operationId: addPcrRequest
      parameters:
      - name: customerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CustomerId'
      requestBody:
        description: PCR Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PcrRequestItem'
      responses:
        "201":
          description: PCR Request created
        "400":
          description: Invalid input, object invalid
        "401":
          description: Security token is missing or invalid
        "409":
          description: An existing PCR Request already exists
      x-swagger-router-controller: Admins
  /customers/{customerId}/pcrRequests/{pcrRequestId}:
    patch:
      summary: set result of an PCR test
      description: Laboratory set the PCR Request Result
      operationId: setResultPcrRequest
      parameters:
      - name: customerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CustomerId'
      - name: pcrRequestId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PcrId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PcrResult'
      responses:
        "200":
          description: PCR Request updated
        "401":
          description: Security token is missing or invalid
        "404":
          description: Item not found
        "409":
          description: The PCR request have already been updated
      x-swagger-router-controller: Admins
components:
  schemas:
    InsuranceId:
      type: string
      description: Identifier for an insurance instance
      format: uuid
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    CustomerId:
      type: string
      example: customer1
    PcrId:
      type: string
      description: Identifier for an PCR instance
      format: uuid
      example: 562b2dd8-5a4f-11eb-ae93-0242ac130002
    DateFormat:
      type: string
      format: date-time
      example: 2016-08-29T09:12:33.001Z
    PcrResult:
      type: string
      description: |
        * `POSITIVE` - Positive for COVID 19 * `NEGATIVE` - Negative for COVID 19 * `UNKNOWN` - Non-determining results. Repeat test.
      enum:
      - POSITIVE
      - NEGATIVE
      - UNKNOWN
    InsuranceItem:
      required:
      - assuredPrice
      - contractDate
      - customerId
      - finishDate
      - id
      - startDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/InsuranceId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        contractDate:
          $ref: '#/components/schemas/DateFormat'
        startDate:
          $ref: '#/components/schemas/DateFormat'
        finishDate:
          $ref: '#/components/schemas/DateFormat'
        assuredPrice:
          type: number
          example: 4.51
    PcrRequestItem:
      required:
      - customerId
      - id
      - requestDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PcrId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        requestDate:
          $ref: '#/components/schemas/DateFormat'
        resultDate:
          $ref: '#/components/schemas/DateFormat'
        result:
          $ref: '#/components/schemas/PcrResult'
      example:
        result: POSITIVE
        customerId: customer1
        requestDate: 2016-08-29T09:12:33.001Z
        resultDate: null
        id: 562b2dd8-5a4f-11eb-ae93-0242ac130002
    OrderPaymentItem:
      required:
      - insurance
      - payment
      type: object
      properties:
        insurance:
          $ref: '#/components/schemas/InsuranceItem'
        payment:
          type: number
          example: 4.51
  responses:
    InvalidInputError:
      description: Invalid input, object invalid
    UnauthorizedError:
      description: Security token is missing or invalid
    NotFoundError:
      description: Item not found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
