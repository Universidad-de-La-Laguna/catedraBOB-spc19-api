openapi: 3.0.0
info:
  title: spc19-api
  description: This is an API for SPC19 project
  contact:
    email: bcuestav@ull.edu.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-oas3
# servers:
# - url: https://virtserver.swaggerhub.com/ESIT-ULL/spc19-api/1.0.0
# - url: http://virtserver.swaggerhub.com/ESIT-ULL/spc19-api/1.0.0
security:
- Bearer: []
paths:
  /insurances:
    post:
      operationId: addInsurancePolicy
      summary: register new insurance policy
      description: Add a new insurance policy to the system
      requestBody:
        description: Insurance item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceItem'
      responses:
        "201":
          description: insurance created
        "400":
          description: Invalid input, object invalid
        "403":
          description: Security token is missing or invalid
        "409":
          description: an existing insurance already exists
      x-swagger-router-controller: insurancesController
    get:
      operationId: getAllInsurancePolicy
      summary: get all insurance policies
      description: Insurer get all policies and hostelry only owns
      responses:
        "200":
          description: array of insurance policies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceItem'
                x-content-type: application/json

        "403":
          description: Security token is missing or invalid
      x-swagger-router-controller: insurancesController
  /insurances/{insuranceId}/pcrRequests:
    parameters:
    - name: insuranceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/InsuranceId'
    - name: customerId
      description: id of customer to PCR test
      in: query
      required: true
      style: form
      explode: false
      schema:
        $ref: '#/components/schemas/CustomerId'
      x-swagger-router-controller: insurancesController
    post:
      summary: new PCR test request to a customer
      description: Hotel create a new PCR Request to check-in os a customer
      operationId: addPcrRequest
      requestBody:
        description: PCR Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PcrRequestItem'
      responses:
        "201":
          description: PCR Request created
        "400":
          description: Invalid input, object invalid
        "403":
          description: Security token is missing or invalid
        "409":
          description: An existing PCR Request already exists
      x-swagger-router-controller: insurancesController
  /insurances/{insuranceId}/pcrRequests/{pcrRequestId}:
    parameters:
    - name: insuranceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/InsuranceId'
    - name: pcrRequestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/PcrId'
      x-swagger-router-controller: insurancesController
    get:
      summary: get a pcrRequest detail
      description: PCR request detail to client date
      operationId: getPcrRequest
      responses:
        "200":
          description: PCR Request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcrRequestItem'
        "403":
          description: Security token is missing or invalid
        "404":
          description: Item not found
      x-swagger-router-controller: insurancesController
    patch:
      summary: set result of an PCR test
      description: Laboratory set the PCR Request Result
      operationId: setResultPcrRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PcrResult'
      responses:
        "200":
          description: PCR Request updated
        "403":
          description: Security token is missing or invalid
        "404":
          description: Item not found
        "409":
          description: The PCR request have already been updated
      x-swagger-router-controller: insurancesController
  /insurances/{insuranceId}/checkPayment:
    parameters:
    - name: insuranceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/InsuranceId'
    post:
      summary: order payment for insurance policy
      description: Order the payment to customer for accomplishment of blockchain
        contract
      operationId: orderPayment
      requestBody:
        description: Order payment detail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentItem'
      responses:
        "200":
          description: payment processed
        "400":
          description: Invalid input, object invalid
        "403":
          description: Security token is missing or invalid
        "404":
          description: Item not found
      x-swagger-router-controller: insurancesController
components:
  schemas:
    InsuranceId:
      type: string
      description: Identifier for an insurance instance
      format: uuid
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    CustomerId:
      type: string
      example: customer1
    PcrId:
      type: string
      description: Identifier for an PCR instance
      format: uuid
      example: 562b2dd8-5a4f-11eb-ae93-0242ac130002
    DateFormat:
      type: string
      format: date-time
      example: 2016-08-29T09:12:33.001Z
    PcrResult:
      type: string
      description: |
        * `POSITIVE` - Positive for COVID 19 * `NEGATIVE` - Negative for COVID 19 * `UNKNOWN` - Non-determining results. Repeat test.
      enum:
      - POSITIVE
      - NEGATIVE
      - UNKNOWN
    ImageHash:
      type: string
      description: Hash of image file of negative PCR
      example: a3b5543998381d38ee72e2793488d1714c3f8d90f4bda632a411cb32f793bf0a
    CustomerItem:
      required:
      - customerId
      - customerName
      - customerTelephone
      - customerEmail
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/CustomerId'
        customerName:
          type: string
          example: My Name
        customerTelephone:
          type: string
          example: 555123456
        customerEmail:
          type: string
          example: myemail@example.com
    InsuranceItem:
      required:
      - assuredPrice
      - contractDate
      - customers
      - finishDate
      - id
      - startDate
      - negativePcrDate
      - negativePcrHash
      type: object
      properties:
        id:
          $ref: '#/components/schemas/InsuranceId'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/CustomerItem'
        contractDate:
          $ref: '#/components/schemas/DateFormat'
        startDate:
          $ref: '#/components/schemas/DateFormat'
        finishDate:
          $ref: '#/components/schemas/DateFormat'
        assuredPrice:
          type: number
          example: 4.51
        negativePcrDate:
          $ref: '#/components/schemas/DateFormat'
        negativePcrHash:
          $ref: '#/components/schemas/ImageHash'
    PcrRequestItem:
      required:
      - customerId
      - id
      - requestDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PcrId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        requestDate:
          $ref: '#/components/schemas/DateFormat'
        resultDate:
          $ref: '#/components/schemas/DateFormat'
        result:
          $ref: '#/components/schemas/PcrResult'
      example:
        result: POSITIVE
        customerId: customer1
        requestDate: 2016-08-29T09:12:33.001Z
        resultDate: null
        id: 562b2dd8-5a4f-11eb-ae93-0242ac130002
    OrderPaymentItem:
      required:
      - insurance
      - payment
      type: object
      properties:
        insurance:
          $ref: '#/components/schemas/InsuranceItem'
        payment:
          type: number
          example: 4.51
  responses:
    InvalidInputError:
      description: Invalid input, object invalid
    UnauthorizedError:
      description: Security token is missing or invalid
    NotFoundError:
      description: Item not found
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
# Authorization rules. View doc in nodejs accesscontrol module. Role must be specified in role jwt attribute
      x-acl-config:
        insurer:
          "insurances":
            "create:any":
              - "*"
            "read:any":
              - "*"
          "insurances/checkPayment":
            "create:any":
              - "*"
        hostelry:
          "insurances":
            "create:any":
              - "*"
            "read:any":
              - "*"
          "/insurances/pcrRequests":
            "create:any":
              - "*"
        laboratory:
          "customers/pcrRequests":
            "read:any":
              - "*"
            "update:any":
              - "*"
        admin:
          "$extend":
            - "insurer"
            - "hostelry"
            - "laboratory"