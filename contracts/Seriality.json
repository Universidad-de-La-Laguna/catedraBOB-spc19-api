{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "devdoc": {
    "author": "pouladzade@gmail.com",
    "details": "The Seriality contract is the main interface for serializing data using the TypeToBytes, BytesToType and SizeOf",
    "kind": "dev",
    "methods": {},
    "title": "Seriality",
    "version": 1
  },
  "evm": {
    "assembly": "    /* \"Insurance.sol\":226:1988  contract Seriality {... */\n  mstore(0x40, 0x80)\n    /* \"Insurance.sol\":252:270  constructor () { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Insurance.sol\":226:1988  contract Seriality {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Insurance.sol\":226:1988  contract Seriality {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206ea701a044b018ad13c89d26dcaa89d4cb5b0ea6ac49d440220f26daa3b140ed64736f6c63430008030033\n}\n",
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206ea701a044b018ad13c89d26dcaa89d4cb5b0ea6ac49d440220f26daa3b140ed64736f6c63430008030033",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xA701A044B018AD13C89D26DCAA89D4 0xCB JUMPDEST 0xE 0xA6 0xAC 0x49 0xD4 BLOCKHASH 0x22 0xF 0x26 0xDA LOG3 0xB1 BLOCKHASH 0xED PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
      "sourceMap": "226:1762:0:-:0;;;252:18;;;;;;;;;;226:1762;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "object": "6080604052600080fdfea26469706673582212206ea701a044b018ad13c89d26dcaa89d4cb5b0ea6ac49d440220f26daa3b140ed64736f6c63430008030033",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xA701A044B018AD13C89D26DCAA89D4 0xCB JUMPDEST 0xE 0xA6 0xAC 0x49 0xD4 BLOCKHASH 0x22 0xF 0x26 0xDA LOG3 0xB1 BLOCKHASH 0xED PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
      "sourceMap": "226:1762:0:-:0;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "12600",
        "executionCost": "66",
        "totalCost": "12666"
      },
      "internal": {
        "boolToBytes(uint256,bool,bytes memory)": "infinite",
        "bytes32ToBytes(uint256,bytes32,bytes memory)": "infinite",
        "sizeOfString(string memory)": "infinite",
        "sizeOfUint16()": "infinite",
        "sizeOfUint256()": "infinite",
        "sizeOfUint8()": "infinite",
        "stringToBytes(uint256,bytes memory,bytes memory)": "infinite",
        "uintToBytes(uint256,uint256,bytes memory)": "infinite"
      }
    },
    "legacyAssembly": {
      ".code": [
        {
          "begin": 226,
          "end": 1988,
          "name": "PUSH",
          "source": 0,
          "value": "80"
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "PUSH",
          "source": 0,
          "value": "40"
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "MSTORE",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "CALLVALUE",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "DUP1",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "ISZERO",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "PUSH [tag]",
          "source": 0,
          "value": "1"
        },
        {
          "begin": 252,
          "end": 270,
          "name": "JUMPI",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "PUSH",
          "source": 0,
          "value": "0"
        },
        {
          "begin": 252,
          "end": 270,
          "name": "DUP1",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "REVERT",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "tag",
          "source": 0,
          "value": "1"
        },
        {
          "begin": 252,
          "end": 270,
          "name": "JUMPDEST",
          "source": 0
        },
        {
          "begin": 252,
          "end": 270,
          "name": "POP",
          "source": 0
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "PUSH #[$]",
          "source": 0,
          "value": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "DUP1",
          "source": 0
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "PUSH [$]",
          "source": 0,
          "value": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "PUSH",
          "source": 0,
          "value": "0"
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "CODECOPY",
          "source": 0
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "PUSH",
          "source": 0,
          "value": "0"
        },
        {
          "begin": 226,
          "end": 1988,
          "name": "RETURN",
          "source": 0
        }
      ],
      ".data": {
        "0": {
          ".auxdata": "a26469706673582212206ea701a044b018ad13c89d26dcaa89d4cb5b0ea6ac49d440220f26daa3b140ed64736f6c63430008030033",
          ".code": [
            {
              "begin": 226,
              "end": 1988,
              "name": "PUSH",
              "source": 0,
              "value": "80"
            },
            {
              "begin": 226,
              "end": 1988,
              "name": "PUSH",
              "source": 0,
              "value": "40"
            },
            {
              "begin": 226,
              "end": 1988,
              "name": "MSTORE",
              "source": 0
            },
            {
              "begin": 226,
              "end": 1988,
              "name": "PUSH",
              "source": 0,
              "value": "0"
            },
            {
              "begin": 226,
              "end": 1988,
              "name": "DUP1",
              "source": 0
            },
            {
              "begin": 226,
              "end": 1988,
              "name": "REVERT",
              "source": 0
            }
          ]
        }
      }
    },
    "methodIdentifiers": {}
  },
  "ewasm": {
    "wasm": ""
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"pouladzade@gmail.com\",\"details\":\"The Seriality contract is the main interface for serializing data using the TypeToBytes, BytesToType and SizeOf\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Seriality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Insurance.sol\":\"Seriality\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Insurance.sol\":{\"keccak256\":\"0x4898ded5435fe0994246137e6078a60065aaa6355f78255b8095c7cc42cce6c2\",\"urls\":[\"bzz-raw://52900ebc8705f0fcd8ad0f0b698aa828c1bba4394ee8c52857062fdae8b8e95a\",\"dweb:/ipfs/QmYLboY4CYx3u8Rio6Rcic1TZYJJLNWkYGjVaBxFYVAWeb\"]},\"PCR.sol\":{\"keccak256\":\"0xa4dbbbe152ea9d036513c584287a900ec9b3bc1a566ae822cd7334b67ecee836\",\"urls\":[\"bzz-raw://d0558f873ce7a0b8716f48b778b8f9b8a9c0f8701b1b1c8ea4802d0eeb8431eb\",\"dweb:/ipfs/Qmbet3RbwdouvyVfig5wRoqECDiX7BRAdg7p4hPpBpx2A1\"]}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
